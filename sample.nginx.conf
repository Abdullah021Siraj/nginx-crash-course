worker_processes auto; # Directive to set the number of worker processes

events{
	worker_connections 1024; # Directive to set the maximum number of simultaneous connections in this case 1024 clients
}

http {
	include mime.types; # Directive to include the mime types file

	upstream nodejs_cluster {
		least_conn; # send request to to the server with least traffic 
		server 127.0.0.1:3001; # server 1
		server 127.0.0.1:3002; # server 2
		server 127.0.0.1:3003; # server 3
	}

	server {
		listen 443 ssl; # Directive to set the port on which the server will listen
		server_name localhost; # Directive to set the server name
		# server_name ec2-xx-xx-xx-xx.compute-1.amazonaws.com; # optional: for ec2

        	# Run the following command to generate a self-signed certificate
        	# openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout <your-cert-private-key> -out <your-cert-private-key>

		ssl_certificate <your-cert-private-key>; # Public key
		ssl_certificate_key <your-cert-private-key>; # Private key

		location / {
			proxy_pass http://nodejs_cluster; # Directive to pass the request to the upstream cluster
			proxy_set_header Host $host; # Pass client information to the backend
			proxy_set_header X-Real-IP $remote_addr; # Pass clients IP address
		}
	}

	server {
		listen 8080;
		server_name localhost;
		# server_name ec2-xx-xx-xx-xx.compute-1.amazonaws.com; # optional: for ec2

		location / {
			return 301 https://$host$request_uri; # Redirect all HTTP requests to HTTPS
		}
	}
}
